openapi: 3.0.1
info:
  title: Ibis
  description: API for Ibis
  contact:
    email: holmes89@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0

tags:
- name: game
  description: Game to be played
- name: user
  description: Operations about user
paths:
  /game:
    get:
      tags:
      - game
      summary: lists games in system
      operationId: listGames
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
  /user:
    get:
      tags:
      - user
      summary: lists users in system
      operationId: listUsers
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /user/{username}:
    get:
      tags:
      - user
      summary: Get user by user name
      operationId: getUserByName
      parameters:
      - name: username
        in: path
        description: 'The name that needs to be fetched. Use user1 for testing. '
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Invalid username supplied
          content: {}
        404:
          description: User not found
          content: {}
  /user/{username}/friends:
    get:
      tags:
      - user
      summary: lists users in system
      operationId: listUserFriends
      parameters:
      - name: username
        in: path
        description: 'The name that needs to be fetched. Use user1 for testing. '
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /user/{username}/instances:
    get:
      tags:
      - game
      summary: lists user games in system
      operationId: listUserGameInstances
      parameters:
      - name: username
        in: path
        description: 'The name that needs to be fetched. Use user1 for testing. '
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GameInstance'
components:
  schemas:
    Game:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        path:
          type: string
        image:
          type: string
        platform:
          type: string
          enum:
          - nes
          - gameboy
        description:
          type: string
    GameInstance:
      type: object
      properties:
        id:
          type: string
        game:
          type: string
        user:
          type: string
        start_time:
          type: string
          format: date-time
        total_time_seconds:
          type: integer
        parent_id:
          type: string
        state:
          type: string
          format: binary
        autosave:
          type: string
          format: binary
      xml:
        name: Category
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string

