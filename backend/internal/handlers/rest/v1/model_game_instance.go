/*
 * Ibis
 *
 * API for Ibis
 *
 * API version: 1.0.0
 * Contact: holmes89@gmail.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package v1

import (
	"os"
	"time"
)

type GameInstance struct {
	Id string `json:"id,omitempty"`

	Game string `json:"game,omitempty"`

	User string `json:"user,omitempty"`

	StartTime time.Time `json:"start_time,omitempty"`

	TotalTimeSeconds int32 `json:"total_time_seconds,omitempty"`

	ParentId string `json:"parent_id,omitempty"`

	State *os.File `json:"state,omitempty"`

	Autosave *os.File `json:"autosave,omitempty"`
}

// AssertGameInstanceRequired checks if the required fields are not zero-ed
func AssertGameInstanceRequired(obj GameInstance) error {
	return nil
}

// AssertRecurseGameInstanceRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of GameInstance (e.g. [][]GameInstance), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseGameInstanceRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aGameInstance, ok := obj.(GameInstance)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertGameInstanceRequired(aGameInstance)
	})
}
