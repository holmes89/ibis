/**
 * Ibis
 * API for Ibis
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: holmes89@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Game from '../model/Game';
import GameInstance from '../model/GameInstance';

/**
* Game service.
* @module api/GameApi
* @version 1.0.0
*/
export default class GameApi {

    /**
    * Constructs a new GameApi. 
    * @alias module:api/GameApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the listGames operation.
     * @callback module:api/GameApi~listGamesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Game>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * lists games in system
     * @param {module:api/GameApi~listGamesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Game>}
     */
    listGames(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Game];
      return this.apiClient.callApi(
        '/game', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listUserGameInstances operation.
     * @callback module:api/GameApi~listUserGameInstancesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GameInstance>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * lists user games in system
     * @param {String} username The name that needs to be fetched. Use user1 for testing. 
     * @param {module:api/GameApi~listUserGameInstancesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GameInstance>}
     */
    listUserGameInstances(username, callback) {
      let postBody = null;
      // verify the required parameter 'username' is set
      if (username === undefined || username === null) {
        throw new Error("Missing the required parameter 'username' when calling listUserGameInstances");
      }

      let pathParams = {
        'username': username
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GameInstance];
      return this.apiClient.callApi(
        '/user/{username}/instances', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
